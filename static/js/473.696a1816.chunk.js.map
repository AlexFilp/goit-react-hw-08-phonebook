{"version":3,"file":"static/js/473.696a1816.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Form/Form.styled.jsx","redux/selectors.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","Pages/Contacts/Contacts.styled.js","Pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h1`\n  font-size: 35px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const Container = styled.div`\n  width: 250px;\n  margin: 0 auto;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid black;\n  margin-bottom: 5px;\n`;\n\nexport const Label = styled.span`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  width: 100%;\n`;\n","import { ContactsTitle, Container, Input, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterInput } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = evt => {\n    const filterValue = evt.target.value;\n    dispatch(filterInput(filterValue));\n  };\n\n  return (\n    <>\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Container>\n        <label>\n          <Label>Find contacts by name</Label>\n          <Input type=\"text\" onChange={handleFilterChange} />\n        </label>\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormTitle = styled.h1`\n  font-size: 40px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 auto;\n  margin-bottom: 15px;\n  width: 400px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid black;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-bottom: 20px;\n  width: 100%;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 20px;\n  width: 100%;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: 7px;\n  font-size: 20px;\n  transition: color 150ms ease-in, background-color 150ms ease-in;\n  background-color: #d3d3d373;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #010101;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectContacts = state => state.contacts.contactsList;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectfilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normilezedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilezedFilter)\n    );\n  }\n);\n\n// export const selectfilteredContacts = state => {\n//   console.log('UPDATE');\n//   const filter = state.filter;\n//   const allContacts = state.contacts.contactsList;\n//   const normilezedFilter = filter.toLowerCase();\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normilezedFilter)\n//   );\n// };\n","import { FormTitle, ContactForm, Label, Input, Span, Btn } from './Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/selectors';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.number.value;\n    if (allContacts.find(contact => contact.name === name)) {\n      return toast.error(`${name} is already in contacts!`);\n    }\n    dispatch(addContact({ name, phone }));\n    form.reset();\n  };\n\n  return (\n    <>\n      <FormTitle>Phonebook</FormTitle>\n      <ContactForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          <Span>Name</Span>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          <Span>Number</Span>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </ContactForm>\n    </>\n  );\n};\n\n// export class OldForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleInputChange = evt => {\n//     this.setState({ [evt.currentTarget.name]: evt.currentTarget.value });\n//   };\n\n// handleSubmit = evt => {\n//   evt.preventDefault();\n//   this.props.onSubmit({\n//     ...this.state,\n//     id: nanoid(10),\n//   });\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <ContactForm onSubmit={this.handleSubmit} autoComplete=\"off\">\n//         <Label>\n//           <Span>Name</Span>\n//           <Input\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleInputChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//         </Label>\n//         <Label>\n//           <Span>Number</Span>\n//           <Input\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.handleInputChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//         </Label>\n//         <Btn type=\"submit\">Add contact</Btn>\n//       </ContactForm>\n//     );\n//   }\n// }\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  position: relative;\n  padding-top: 40px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n\nexport const LoaderContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  justify-content: space-between;\n  width: calc((100% - 20px) / 3);\n  padding: 5px;\n  border-radius: 10px;\n  border: 1px solid black;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n\nexport const Btn = styled.button`\n  padding: 7px;\n  font-size: 20px;\n  transition: color 150ms ease-in, background-color 150ms ease-in;\n  background-color: #d3d3d373;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #010101;\n  }\n`;\n","import { Item, Text, Btn } from './ContactsItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactsItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Item>\n      <Text>\n        {name}: {phone}\n      </Text>\n      <Btn onClick={handleDelete}>Delete</Btn>\n    </Item>\n  );\n};\n","import { ListContainer, List, LoaderContainer } from './ContactsList.styled';\nimport { ContactsItem } from '../ContactsItem/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { selectfilteredContacts } from 'redux/selectors';\nimport { selectIsLoading, selectError } from 'redux/selectors';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectfilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <ListContainer>\n      {isLoading && !error && (\n        <LoaderContainer>\n          <RotatingLines height=\"35\" width=\"35\" strokeColor=\"grey\" />\n          <p>Loading</p>\n        </LoaderContainer>\n      )}\n      <List>\n        {filteredContacts.map(({ id, name, phone }) => {\n          return <ContactsItem key={id} id={id} name={name} phone={phone} />;\n        })}\n      </List>\n    </ListContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 30px;\n`;\n","import { Filter } from '../../components/Filter/Filter';\nimport { Form } from '../../components/Form/Form';\nimport { ContactsList } from '../..//components/ContactsList/ContactsList';\nimport { GlobalContainer } from '../../components/GlobalStyle';\nimport { Container } from './Contacts.styled';\n\nexport default function Contacts() {\n  return (\n    <GlobalContainer>\n      <Container>\n        <Form />\n        <Filter />\n        <ContactsList />\n      </Container>\n    </GlobalContainer>\n  );\n}\n"],"names":["ContactsTitle","styled","Container","Label","Input","Filter","dispatch","useDispatch","type","onChange","evt","filterValue","target","value","filterInput","FormTitle","ContactForm","Span","Btn","selectContacts","state","contacts","contactsList","selectIsLoading","isLoading","selectError","error","selectfilteredContacts","createSelector","filter","normilezedFilter","toLowerCase","contact","name","includes","Form","allContacts","useSelector","onSubmit","preventDefault","form","elements","phone","number","find","toast","addContact","reset","autoComplete","pattern","title","required","ListContainer","List","LoaderContainer","Item","Text","ContactsItem","id","onClick","deleteContact","ContactsList","filteredContacts","height","width","strokeColor","map","Contacts"],"sourceRoot":""}