{"version":3,"file":"static/js/380.74562ff9.chunk.js","mappings":"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","sources":["Pages/Register/Register.styled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","Pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 30px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 40px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 auto;\n  margin-top: 70px;\n  margin-bottom: 15px;\n  width: 400px;\n  padding: 15px;\n  border-radius: 10px;\n\n  box-shadow: ${pr => pr.theme.boxShadow};\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-bottom: 8px;\n  width: 100%;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 20px;\n  width: 100%;\n  height: 30px;\n  text-align: center;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 5px;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  box-shadow: ${pr => pr.theme.boxShadow};\n`;\n\nexport const ErrorMessageContainer = styled.div`\n  height: auto;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 18px;\n  color: red;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-top: 10px;\n  padding: 7px;\n  font-size: 20px;\n  transition: color ${pr => pr.theme.transition},\n    transform ${pr => pr.theme.transition};\n  background-color: #d3d3d373;\n  border-radius: 4px;\n  border: none;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  &:hover,\n  &:focus {\n    color: ${pr => pr.theme.color.accentColor};\n    transform: scale(1.1);\n  }\n\n  &:disabled {\n    transform: scale(0.9);\n    color: grey;\n    box-shadow: ${pr => pr.theme.boxShadowDisabled};\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const HomeRegisterLink = styled(Link)`\n  display: inline-block;\n  margin-left: 3px;\n  color: ${pr => pr.theme.color.accentColor};\n  text-decoration: underline;\n  transition: transform ${pr => pr.theme.transition};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import {\n  Form,\n  Label,\n  Span,\n  Input,\n  ErrorMessageContainer,\n  ErrorText,\n  Btn,\n  Text,\n  HomeRegisterLink,\n} from './RegisterForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { doRegister } from '../../redux/Auth/operations';\nimport { useForm } from 'react-hook-form';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const onHandleSubmit = data => {\n    console.log(data.name);\n    console.log(data.email);\n    console.log(data.password);\n    dispatch(\n      doRegister({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n      })\n    );\n    reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit(onHandleSubmit)}>\n        <Label>\n          <Span>Username</Span>\n          <Input\n            {...register('name', {\n              required: 'The field is required',\n              minLength: {\n                value: 4,\n                message: 'Minimum 4 symbols',\n              },\n            })}\n          />\n        </Label>\n        <ErrorMessageContainer>\n          {errors?.name && (\n            <ErrorText>{errors?.name?.message || 'Error!'}</ErrorText>\n          )}\n        </ErrorMessageContainer>\n        <Label>\n          <Span>Email</Span>\n          <Input\n            type=\"email\"\n            {...register('email', {\n              required: 'The field is required',\n            })}\n          />\n        </Label>\n        <ErrorMessageContainer>\n          {errors?.email && (\n            <ErrorText>{errors?.email?.message || 'Invalid email!'}</ErrorText>\n          )}\n        </ErrorMessageContainer>\n        <Label>\n          <Span>Password</Span>\n          <Input\n            type=\"password\"\n            {...register('password', {\n              required: 'The field is required',\n              minLength: {\n                value: 6,\n                message: 'Minimum 6 symbols',\n              },\n            })}\n            autoComplete=\"off\"\n          />\n        </Label>\n        <ErrorMessageContainer>\n          {errors?.password && (\n            <ErrorText>\n              {errors?.password?.message || 'Invalid password!'}\n            </ErrorText>\n          )}\n        </ErrorMessageContainer>\n        <Btn type=\"submit\" disabled={!isValid}>\n          Register\n        </Btn>\n      </Form>\n      <Text>\n        Already have an account?{' '}\n        <HomeRegisterLink to={'/login'}>Go log in!</HomeRegisterLink>\n      </Text>\n    </>\n  );\n};\n","import { GlobalContainer } from '../../components/GlobalStyle';\nimport { Container } from './Register.styled';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <GlobalContainer>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <Container>\n        <RegisterForm />\n      </Container>\n    </GlobalContainer>\n  );\n}\n"],"names":["Container","styled","Form","pr","theme","boxShadow","Label","Span","Input","ErrorMessageContainer","ErrorText","Btn","transition","color","accentColor","boxShadowDisabled","Text","HomeRegisterLink","Link","RegisterForm","dispatch","useDispatch","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","onSubmit","data","console","log","name","email","password","doRegister","required","minLength","value","message","type","autoComplete","disabled","to","Register","Helmet"],"sourceRoot":""}