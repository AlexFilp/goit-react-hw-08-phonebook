{"version":3,"file":"static/js/200.3d761163.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/Contacts/selectors.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","Pages/Contacts/Contacts.styled.js","Pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h1`\n  font-size: 35px;\n  color: ${pr => pr.theme.color.accentColor};\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const Container = styled.div`\n  width: 250px;\n  margin: 0 auto;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  margin-bottom: 7px;\n`;\n\nexport const Label = styled.span`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  padding-left: 5px;\n  padding-right: 5px;\n  padding-bottom: 5px;\n  font-size: 19px;\n  text-align: center;\n  width: 100%;\n  height: 30px;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  box-shadow: ${pr => pr.theme.boxShadow};\n`;\n","import { ContactsTitle, Container, Input, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterInput } from 'redux/Contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = evt => {\n    const filterValue = evt.target.value;\n    dispatch(filterInput(filterValue));\n  };\n\n  return (\n    <>\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Container>\n        <label>\n          <Label>Find contacts by name</Label>\n          <Input type=\"text\" onChange={handleFilterChange} />\n        </label>\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormTitle = styled.h1`\n  font-size: 40px;\n  color: ${pr => pr.theme.color.accentColor};\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 auto;\n  margin-bottom: 15px;\n  width: 400px;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: ${pr => pr.theme.boxShadow};\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-bottom: 8px;\n  width: 100%;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 20px;\n  width: 100%;\n  height: 30px;\n  text-align: center;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 5px;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  box-shadow: ${pr => pr.theme.boxShadow};\n`;\nexport const ErrorMessageContainer = styled.div`\n  height: auto;\n\n  width: 100%;\n  text-align: center;\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 18px;\n  color: red;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-top: 10px;\n  padding: 7px;\n  font-size: 20px;\n  transition: color ${pr => pr.theme.transition},\n    transform ${pr => pr.theme.transition};\n  background-color: #d3d3d373;\n  border-radius: 4px;\n  border: none;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  &:hover,\n  &:focus {\n    color: ${pr => pr.theme.color.accentColor};\n    transform: scale(1.1);\n  }\n  &:disabled {\n    transform: scale(0.9);\n    color: grey;\n    box-shadow: ${pr => pr.theme.boxShadowDisabled};\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectContacts = state => state.contacts.contactsList;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectfilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normilezedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilezedFilter)\n    );\n  }\n);\n\n// export const selectfilteredContacts = state => {\n//   console.log('UPDATE');\n//   const filter = state.filter;\n//   const allContacts = state.contacts.contactsList;\n//   const normilezedFilter = filter.toLowerCase();\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normilezedFilter)\n//   );\n// };\n","import {\n  FormTitle,\n  ContactForm,\n  Label,\n  Input,\n  Span,\n  ErrorMessageContainer,\n  ErrorText,\n  Btn,\n} from './Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/Contacts/selectors';\nimport { useForm } from 'react-hook-form';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const onHandleSubmit = data => {\n    if (allContacts.find(contact => contact.name === data.name)) {\n      return toast.error(`${data.name} is already in contacts!`);\n    }\n    dispatch(addContact({ name: data.name, number: data.number }));\n    reset();\n  };\n\n  return (\n    <>\n      <FormTitle>Phonebook</FormTitle>\n      <ContactForm onSubmit={handleSubmit(onHandleSubmit)} autoComplete=\"off\">\n        <Label>\n          <Span>Name</Span>\n          <Input\n            {...register('name', {\n              required: 'The field is required',\n              minLength: {\n                value: 4,\n                message: 'Minimum 4 symbols',\n              },\n              pattern: {\n                value:\n                  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n                message:\n                  'Name may contain only letters, apostrophe, dash and spaces.',\n              },\n            })}\n          />\n        </Label>\n        <ErrorMessageContainer>\n          {errors?.name && (\n            <ErrorText>{errors?.name?.message || 'Error!'}</ErrorText>\n          )}\n        </ErrorMessageContainer>\n        <Label>\n          <Span>Number</Span>\n          <Input\n            {...register('number', {\n              required: 'The field is required',\n              minLength: {\n                value: 7,\n                message: 'Minimum 7 symbols',\n              },\n              pattern: {\n                value:\n                  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n                message:\n                  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n              },\n            })}\n          />\n        </Label>\n        <ErrorMessageContainer>\n          {errors?.number && (\n            <ErrorText>{errors?.number?.message || 'Error!'}</ErrorText>\n          )}\n        </ErrorMessageContainer>\n        <Btn type=\"submit\" disabled={!isValid}>\n          Add contact\n        </Btn>\n      </ContactForm>\n    </>\n  );\n};\n\n// type = 'text';\n// name = 'name';\n// pattern = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n// title =\n//   \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\n// required;\n\n//  type = 'tel';\n//  name = 'number';\n//  pattern = '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}';\n//  title =\n//    'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\n//  required;\n\n// export class OldForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleInputChange = evt => {\n//     this.setState({ [evt.currentTarget.name]: evt.currentTarget.value });\n//   };\n\n// handleSubmit = evt => {\n//   evt.preventDefault();\n//   this.props.onSubmit({\n//     ...this.state,\n//     id: nanoid(10),\n//   });\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <ContactForm onSubmit={this.handleSubmit} autoComplete=\"off\">\n//         <Label>\n//           <Span>Name</Span>\n//           <Input\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleInputChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//         </Label>\n//         <Label>\n//           <Span>Number</Span>\n//           <Input\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.handleInputChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//         </Label>\n//         <Btn type=\"submit\">Add contact</Btn>\n//       </ContactForm>\n//     );\n//   }\n// }\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  position: relative;\n  padding-top: 40px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n\nexport const LoaderContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  justify-content: space-between;\n  width: calc((100% - 20px) / 3);\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${pr => pr.theme.boxShadow};\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n\nexport const Btn = styled.button`\n  padding: 7px;\n  font-size: 20px;\n  transition: color ${pr => pr.theme.transition},\n    transform ${pr => pr.theme.transition};\n  background-color: #d3d3d373;\n  border-radius: 4px;\n  border: none;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  &:hover,\n  &:focus {\n    color: ${pr => pr.theme.color.accentColor};\n    transform: scale(1.1);\n  }\n`;\n","import { Item, Text, Btn } from './ContactsItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/operations';\n\nexport const ContactsItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Item>\n      <Text>\n        {name}: {phone}\n      </Text>\n      <Btn onClick={handleDelete}>Delete</Btn>\n    </Item>\n  );\n};\n","import { ListContainer, List, LoaderContainer } from './ContactsList.styled';\nimport { ContactsItem } from '../ContactsItem/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { selectfilteredContacts } from 'redux/Contacts/selectors';\nimport { selectIsLoading, selectError } from 'redux/Contacts/selectors';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectfilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <ListContainer>\n      {isLoading && !error && (\n        <LoaderContainer>\n          <RotatingLines height=\"35\" width=\"35\" strokeColor=\"blue\" />\n        </LoaderContainer>\n      )}\n      <List>\n        {filteredContacts.map(({ id, name, number }) => {\n          return <ContactsItem key={id} id={id} name={name} phone={number} />;\n        })}\n      </List>\n    </ListContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 30px;\n`;\n","import { Filter } from '../../components/Filter/Filter';\nimport { Form } from '../../components/Form/Form';\nimport { ContactsList } from '../..//components/ContactsList/ContactsList';\nimport { GlobalContainer } from '../../components/GlobalStyle';\nimport { Container } from './Contacts.styled';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport { Helmet } from 'react-helmet';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <GlobalContainer>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Container>\n        <Form />\n        <Filter />\n        <ContactsList />\n      </Container>\n    </GlobalContainer>\n  );\n}\n"],"names":["ContactsTitle","styled","pr","theme","color","accentColor","Container","boxShadow","Label","Input","Filter","dispatch","useDispatch","type","onChange","evt","filterValue","target","value","filterInput","FormTitle","ContactForm","Span","ErrorMessageContainer","ErrorText","Btn","transition","boxShadowDisabled","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","contactsList","selectIsLoading","isLoading","selectError","error","selectfilteredContacts","filter","normilezedFilter","toLowerCase","contact","includes","Form","allContacts","useSelector","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","onSubmit","data","toast","addContact","number","autoComplete","required","minLength","message","pattern","disabled","ListContainer","List","LoaderContainer","Item","Text","ContactsItem","id","phone","onClick","deleteContact","ContactsList","filteredContacts","height","width","strokeColor","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}